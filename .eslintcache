[{"/home/phoenix/Desktop/redux-saga/src/index.js":"1","/home/phoenix/Desktop/redux-saga/src/redux/rootReducer.js":"2","/home/phoenix/Desktop/redux-saga/src/redux/postsReducers.js":"3","/home/phoenix/Desktop/redux-saga/src/components/Post.tsx":"4","/home/phoenix/Desktop/redux-saga/src/components/FetchedPosts.tsx":"5","/home/phoenix/Desktop/redux-saga/src/components/Posts.tsx":"6","/home/phoenix/Desktop/redux-saga/src/App.tsx":"7","/home/phoenix/Desktop/redux-saga/src/components/PostForm.tsx":"8","/home/phoenix/Desktop/redux-saga/src/redux/types.js":"9","/home/phoenix/Desktop/redux-saga/src/redux/actions.js":"10"},{"size":793,"mtime":1607461921075,"results":"11","hashOfConfig":"12"},{"size":158,"mtime":1607461845743,"results":"13","hashOfConfig":"12"},{"size":373,"mtime":1607462494249,"results":"14","hashOfConfig":"15"},{"size":316,"mtime":1608150773200,"results":"16","hashOfConfig":"12"},{"size":471,"mtime":1608151434498,"results":"17","hashOfConfig":"12"},{"size":575,"mtime":1608152191465,"results":"18","hashOfConfig":"12"},{"size":626,"mtime":1608152359814,"results":"19","hashOfConfig":"12"},{"size":1875,"mtime":1608241356958,"results":"20","hashOfConfig":"12"},{"size":40,"mtime":1607462337188,"results":"21","hashOfConfig":"12"},{"size":144,"mtime":1607462565022,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"15quxyu",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tp3s02",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/phoenix/Desktop/redux-saga/src/index.js",[],["48","49"],"/home/phoenix/Desktop/redux-saga/src/redux/rootReducer.js",[],["50","51"],"/home/phoenix/Desktop/redux-saga/src/redux/postsReducers.js",[],"/home/phoenix/Desktop/redux-saga/src/components/Post.tsx",[],"/home/phoenix/Desktop/redux-saga/src/components/FetchedPosts.tsx",["52"],"import React from 'react'\nimport Post from './Post'\n\ninterface Post\n{\n    title: string,\n}\n\nconst FetchedPosts = ({posts} : { posts: Post[]}) => {\n    if(!posts.length) {\n        return (\n           <button className=\"btn btn-primary\">Load</button>\n        )\n    }\n    return (\n        <div>\n            <h1>Posts</h1>\n            {posts.map(item => (\n                <Post key={item.title} {...item}/>\n            ))}\n        </div>\n    )\n}\n\nexport default FetchedPosts\n",["53","54"],"/home/phoenix/Desktop/redux-saga/src/components/Posts.tsx",["55"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport Post from './Post'\n\ninterface Post\n{\n    title: string,\n}\n\n\nexport const Posts = ({ syncPosts }: {syncPosts: Post[]}) => {\n    if(!syncPosts.length) {\n        return (\n            <p>there are no posts</p>\n        )\n    }\n    return (\n        <div>\n            {syncPosts.map(item => (\n                <Post key={item.title} {...item}/>\n            ))}\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    syncPosts: state.posts.posts\n})\n\nexport default connect(mapStateToProps, null)(Posts)\n","/home/phoenix/Desktop/redux-saga/src/App.tsx",[],"/home/phoenix/Desktop/redux-saga/src/components/PostForm.tsx",[],"/home/phoenix/Desktop/redux-saga/src/redux/types.js",[],"/home/phoenix/Desktop/redux-saga/src/redux/actions.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":11,"nodeType":"64","messageId":"65","endLine":4,"endColumn":15},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":11,"nodeType":"64","messageId":"65","endLine":5,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"@typescript-eslint/no-redeclare","'Post' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]